<Program> -> <Statement> | <Statement> <Statement>

<Statement> -> <VarDeclaration> | <FunctionDeclaration> | <Assignment> | <Print>

<VarDeclaration> -> var <Name> = <Expression>

<FunctionDeclaration> -> function <Name> ( <NameList> ) { <Program> <Return> }


//multiple return types? if not, -> return <Expression>
<Return> -> return <ParameterList>

<Assignment> -> <Name> = <Expression>

<Assignment> -> <SingleAssignment> | <MultipleAssignment>

<SingleAssignment> -> <Name> = <Expression>


//size of NameList has to match the number of return values from the FunctionCall
<MultipleAssignment> -> <NameList> = <FunctionCall>

<Print> -> print <Expression>



<NameList> -> <Name> | <Name> , <NameList>

<ParameterList> -> <Parameter> | <Parameter> , <ParameterList>

<Parameter> -> <Name> | <Expression>



<Expression> -> <Term> | <Expression> + <Term> | <Expression> - <Term>

<Term> -> <Factor> | <Term> * <Factor> | <Term> / <Factor>

<Factor> -> <SubExpression> | <SubExpression> ^ <Factor> | <Value> ^ <Factor> | <Value> | <FunctionCall>

<FunctionCall> -> <Name> ( <ParameterList> ) | <Name> ( <ParameterList> ) : <Index>

<SubExpression> -> ( <Expression> )

<Value> -> <Name> | <Number>





<Name> = [0-9,a-z,A-Z,_]+

<Number> = [-]?[0-9]*[\.][0-9]*

<Index> -> [0-9]+
